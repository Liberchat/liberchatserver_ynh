#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# DIAGNOSTIC SCRIPT FOR LIBERCHAT
#=================================================

echo "=== LIBERCHAT DIAGNOSTIC ==="
echo "Date: $(date)"
echo ""

#=================================================
# CHECK SERVICE STATUS
#=================================================
echo "=== SERVICE STATUS ==="
if systemctl is-active --quiet $app; then
    echo "✓ Service $app is running"
else
    echo "✗ Service $app is NOT running"
    echo "Status:"
    systemctl status $app --no-pager -l
fi
echo ""

#=================================================
# CHECK INSTALLATION DIRECTORY
#=================================================
echo "=== INSTALLATION DIRECTORY ==="
if [ -d "$install_dir" ]; then
    echo "✓ Installation directory exists: $install_dir"
    echo "Contents:"
    ls -la "$install_dir" | head -10
    echo ""
    
    if [ -f "$install_dir/server.js" ]; then
        echo "✓ server.js exists"
    else
        echo "✗ server.js missing"
    fi
    
    if [ -d "$install_dir/dist" ]; then
        echo "✓ dist directory exists"
        echo "Dist contents:"
        ls -la "$install_dir/dist"
    else
        echo "✗ dist directory missing - build may have failed"
    fi
    
    if [ -f "$install_dir/.env" ]; then
        echo "✓ .env file exists"
        echo "Environment variables:"
        cat "$install_dir/.env"
    else
        echo "✗ .env file missing"
    fi
else
    echo "✗ Installation directory missing: $install_dir"
fi
echo ""

#=================================================
# CHECK NGINX CONFIGURATION
#=================================================
echo "=== NGINX CONFIGURATION ==="
nginx_conf="/etc/nginx/conf.d/$domain.d/$app.conf"
if [ -f "$nginx_conf" ]; then
    echo "✓ Nginx config exists: $nginx_conf"
    echo "Config content:"
    cat "$nginx_conf"
else
    echo "✗ Nginx config missing: $nginx_conf"
fi
echo ""

#=================================================
# CHECK NETWORK CONNECTIVITY
#=================================================
echo "=== NETWORK CONNECTIVITY ==="
if netstat -tlnp | grep ":$port " > /dev/null; then
    echo "✓ Port $port is listening"
    echo "Process on port $port:"
    netstat -tlnp | grep ":$port "
else
    echo "✗ Port $port is NOT listening"
fi
echo ""

#=================================================
# CHECK RECENT LOGS
#=================================================
echo "=== RECENT LOGS ==="
echo "Last 20 lines of service logs:"
journalctl -u $app -n 20 --no-pager
echo ""

#=================================================
# CHECK PERMISSIONS
#=================================================
echo "=== PERMISSIONS ==="
echo "Installation directory permissions:"
ls -ld "$install_dir"
echo "Key files permissions:"
ls -l "$install_dir/server.js" "$install_dir/.env" 2>/dev/null || echo "Some files missing"
echo ""

#=================================================
# TEST HTTP ENDPOINTS
#=================================================
echo "=== HTTP ENDPOINTS TEST ==="
echo "Testing main page:"
curl -s -o /dev/null -w "HTTP Status: %{http_code}\n" "http://127.0.0.1:$port$path/" || echo "Connection failed"

echo "Testing Socket.IO:"
curl -s -o /dev/null -w "HTTP Status: %{http_code}\n" "http://127.0.0.1:$port$path/socket.io/?EIO=4&transport=polling" || echo "Connection failed"
echo ""

echo "=== END DIAGNOSTIC ==="