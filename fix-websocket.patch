--- a/src/components/App.tsx
+++ b/src/components/App.tsx
@@ -58,12 +58,25 @@ function App() {
   useEffect(() => {
     // Connexion Socket.IO dynamique selon l'environnement
     let socketUrl = '';
+    let socketPath = '/socket.io/';
+    
     if (import.meta.env.DEV) {
       socketUrl = 'http://localhost:3000';
     } else {
       // Utilise l'origine de la page (supporte HTTPS, Tor, reverse proxy, etc.)
       let port = window.location.port;
       const portPart = port ? `:${port}` : '';
       socketUrl = `${window.location.protocol}//${window.location.hostname}${portPart}`;
+      
+      // DÃ©tection du chemin YunoHost depuis l'URL actuelle
+      const currentPath = window.location.pathname;
+      if (currentPath !== '/' && !currentPath.startsWith('/socket.io')) {
+        // Extrait le chemin de base (ex: /liberchat)
+        const pathMatch = currentPath.match(/^(\/[^/]+)/);
+        if (pathMatch) {
+          socketPath = `${pathMatch[1]}/socket.io/`;
+        }
+      }
     }
     
     console.log('Socket.IO config:', { socketUrl, socketPath });
@@ -71,7 +84,11 @@ function App() {
     const newSocket = io(socketUrl, {
-      transports: ['websocket', 'polling']
+      path: socketPath,
+      transports: ['websocket', 'polling'],
+      forceNew: true,
+      reconnection: true,
+      timeout: 20000
     });
     setSocket(newSocket);